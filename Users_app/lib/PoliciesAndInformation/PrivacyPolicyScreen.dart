import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import '../../utils/constants.dart';
import '../screens/ContactUsPage .dart';
import '../theme/app_theme.dart';

class PrivacyPolicyScreen extends StatefulWidget {
  @override
  _PrivacyPolicyScreenState createState() => _PrivacyPolicyScreenState();
}

class _PrivacyPolicyScreenState extends State<PrivacyPolicyScreen>
    with TickerProviderStateMixin {
  late AnimationController _animationController;
  late Animation<double> _fadeAnimation;

  @override
  void initState() {
    super.initState();
    _animationController = AnimationController(
      duration: Duration(milliseconds: 1000),
      vsync: this,
    );
    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(
      CurvedAnimation(parent: _animationController, curve: Curves.easeInOut),
    );
    _animationController.forward();
  }

  @override
  void dispose() {
    _animationController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final customColors = AppThemes.customColors(context);

    return Scaffold(
      backgroundColor: theme.scaffoldBackgroundColor,
      body: CustomScrollView(
        slivers: [
          // AppBar ูุฎุตุต ูุน ุชุฃุซูุฑุงุช ุฌุฐุงุจุฉ
          SliverAppBar(
            expandedHeight: 250,
            floating: false,
            pinned: true,
            backgroundColor: AppColors.primary,
            flexibleSpace: FlexibleSpaceBar(
              background: Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                    colors: [
                      AppColors.primary,
                      AppColors.secondary,
                    ],
                  ),
                ),
                child: Stack(
                  children: [
                    Positioned.fill(
                      child: CustomPaint(
                        painter: CelebrationPainter(),
                      ),
                    ),
                    Center(
                      child: FadeTransition(
                        opacity: _fadeAnimation,
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            SizedBox(height: 40),
                            TweenAnimationBuilder(
                              duration: Duration(seconds: 2),
                              tween: Tween<double>(begin: 0, end: 1),
                              builder: (context, double value, child) {
                                return Transform.scale(
                                  scale: value,
                                  child: Container(
                                    padding: EdgeInsets.all(20),
                                    decoration: BoxDecoration(
                                      color: Colors.white.withOpacity(0.2),
                                      shape: BoxShape.circle,
                                    ),
                                    child: FaIcon(
                                      FontAwesomeIcons.shieldHalved,
                                      size: 60,
                                      color: Colors.white,
                                    ),
                                  ),
                                );
                              },
                            ),
                            SizedBox(height: 20),
                            Text(
                              'ุณูุงุณุฉ ุงูุฎุตูุตูุฉ',
                              style: AppTextStyles.heading(context).copyWith(
                                color: Colors.white,
                              ),
                            ),
                            SizedBox(height: 8),
                            Text(
                              'ูุญู ููุฏุฑ ุฎุตูุตูุชู ููุญูููุง',
                              style: AppTextStyles.medium(context).copyWith(
                                color: Colors.white.withOpacity(0.9),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
            leading: IconButton(
              icon: Icon(Icons.arrow_back_ios, color: Colors.white),
              onPressed: () => Navigator.pop(context),
            ),
          ),

          // ุงููุญุชูู
          SliverToBoxAdapter(
            child: Transform.translate(
              offset: Offset(0, -30),
              child: Container(
                decoration: BoxDecoration(
                  color: theme.cardColor,
                  borderRadius: BorderRadius.vertical(top: Radius.circular(30)),
                  border: Border.all(color: customColors.borderColor),
                ),
                child: Padding(
                  padding: EdgeInsets.all(20),
                  child: Column(
                    children: [
                      // ููุฏูุฉ
                      _buildPrivacyCard(
                        icon: FontAwesomeIcons.handshake,
                        title: 'ุงูุชุฒุงููุง ุจุงูุฎุตูุตูุฉ',
                        content: '''ูู SEMุ ููุชุฒู ุจุญูุงูุฉ ุฎุตูุตูุชู ูุจูุงูุงุชู ุงูุดุฎุตูุฉ. ูุญู ููุฏุฑ ุซูุชู ุจูุง ููุนูู ุจุฌุฏ ููุญูุงุธ ุนูู ุฃูุงู ูุนูููุงุชู ุฃุซูุงุก ุงุณุชุฎุฏุงูู ูุชุทุจูููุง ูุญุฌุฒ ุฎุฏูุงุช ุงูุญููุงุช ูุงูููุงุณุจุงุช ูู ุงูููู.

ูุฐู ุงูุณูุงุณุฉ ุชูุถุญ ููููุฉ ุฌูุน ูุงุณุชุฎุฏุงู ูุญูุงูุฉ ุจูุงูุงุชู ุงูุดุฎุตูุฉ.''',
                        theme: theme,
                        delay: 200,
                      ),

                      // ุงูุจูุงูุงุช ุงููุฌูุนุฉ
                      _buildPrivacyCard(
                        icon: FontAwesomeIcons.database,
                        title: 'ุงูุจูุงูุงุช ุงูุชู ูุฌูุนูุง',
                        content: '''ูููู ุจุฌูุน ุงูุจูุงูุงุช ุงูุชุงููุฉ ูุชุญุณูู ุฎุฏูุงุชูุง:

โข ูุนูููุงุช ุงูุญุณุงุจ: ุงูุงุณูุ ุฑูู ุงููุงุชูุ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู
โข ูุนูููุงุช ุงูุญุฌุฒ: ุชูุงุตูู ุงูููุงุณุจุงุช ูุงูุญููุงุช ุงููุญุฌูุฒุฉ
โข ุงููุนูููุงุช ุงูุฌุบุฑุงููุฉ: ุงููููุน ูุชูุฏูู ุฎุฏูุงุช ูุญููุฉ
โข ูุนูููุงุช ุงูุฌูุงุฒ: ููุน ุงูุฌูุงุฒ ููุธุงู ุงูุชุดุบูู
โข ุณุฌู ุงูุงุณุชุฎุฏุงู: ููููุฉ ุชูุงุนูู ูุน ุงูุชุทุจูู''',
                        theme: theme,
                        delay: 400,
                      ),

                      // ุงุณุชุฎุฏุงู ุงูุจูุงูุงุช
                      _buildPrivacyCard(
                        icon: FontAwesomeIcons.cogs,
                        title: 'ููู ูุณุชุฎุฏู ุจูุงูุงุชู',
                        content: '''ูุณุชุฎุฏู ุจูุงูุงุชู ููุฃุบุฑุงุถ ุงูุชุงููุฉ:

๐ ุชูููุฐ ูุฅุฏุงุฑุฉ ุญุฌูุฒุงุช ุงูููุงุณุจุงุช ูุงูุญููุงุช
๐ฑ ุชุญุณูู ุชุฌุฑุจุฉ ุงุณุชุฎุฏุงู ุงูุชุทุจูู
๐ง ุฅุฑุณุงู ุฅุดุนุงุฑุงุช ูููุฉ ุญูู ุญุฌูุฒุงุชู
๐ฏ ุชูุฏูู ุฎุฏูุงุช ูุฎุตุตุฉ ุญุณุจ ุงุญุชูุงุฌุงุชู
๐ก๏ธ ุถูุงู ุฃูุงู ุงูุชุทุจูู ูููุน ุงูุงุญุชูุงู
๐ ุชุญููู ุงุณุชุฎุฏุงู ุงูุชุทุจูู ูุชุทููุฑ ุฎุฏูุงุช ุฃูุถู''',
                        theme: theme,
                        delay: 600,
                      ),

                      // ุญูุงูุฉ ุงูุจูุงูุงุช
                      _buildPrivacyCard(
                        icon: FontAwesomeIcons.lock,
                        title: 'ุญูุงูุฉ ุจูุงูุงุชู',
                        content: '''ูุทุจู ุฃุนูู ูุนุงููุฑ ุงูุฃูุงู ูุญูุงูุฉ ุจูุงูุงุชู:

๐ ุชุดููุฑ ุฌููุน ุงูุจูุงูุงุช ุฃุซูุงุก ุงูููู ูุงูุชุฎุฒูู
๐ก๏ธ ุฎูุงุฏู ุขููุฉ ูุน ุญูุงูุฉ ูุชูุฏูุฉ ูู ุงูุงุฎุชุฑุงู
๐ฅ ุชูููุฏ ุงููุตูู ููุจูุงูุงุช ููููุธููู ุงููุตุฑุญ ููู ููุท
๐ ูุณุฎ ุงุญุชูุงุทูุฉ ููุชุธูุฉ ูุถูุงู ุนุฏู ููุฏุงู ุงูุจูุงูุงุช
โก ูุฑุงูุจุฉ ูุณุชูุฑุฉ ููุฃูุดุทุฉ ุงููุดุจููุฉ''',
                        theme: theme,
                        delay: 800,
                      ),

                      // ูุดุงุฑูุฉ ุงูุจูุงูุงุช
                      _buildPrivacyCard(
                        icon: FontAwesomeIcons.shareAlt,
                        title: 'ูุดุงุฑูุฉ ุงูุจูุงูุงุช',
                        content: '''ูุญู ูุง ูุจูุน ุฃู ูุคุฌุฑ ุจูุงูุงุชู ุงูุดุฎุตูุฉ ูุฃุทุฑุงู ุซุงูุซุฉ. ูุฏ ูุดุงุฑู ุงููุนูููุงุช ููุท ูู ุงูุญุงูุงุช ุงูุชุงููุฉ:

โข ูุน ููุฏูู ุงูุฎุฏูุงุช ุงููุนุชูุฏูู ูุชูููุฐ ุญุฌูุฒุงุชู
โข ุนูุฏ ูุฌูุฏ ุฅูุฒุงู ูุงูููู ูู ุงูุณูุทุงุช ุงููุฎุชุตุฉ
โข ูุญูุงูุฉ ุญููููุง ูุญููู ุงููุณุชุฎุฏููู ุงูุขุฎุฑูู
โข ูุน ููุงููุชู ุงูุตุฑูุญุฉ ุงููุณุจูุฉ''',
                        theme: theme,
                        delay: 1000,
                      ),

                      // ุญููู ุงููุณุชุฎุฏู
                      _buildPrivacyCard(
                        icon: FontAwesomeIcons.userShield,
                        title: 'ุญูููู',
                        content: '''ูุฏูู ุงูุญููู ุงูุชุงููุฉ ูููุง ูุชุนูู ุจุจูุงูุงุชู:

โ ุงูุญุตูู ุนูู ูุณุฎุฉ ูู ุจูุงูุงุชู ุงูุดุฎุตูุฉ
โ๏ธ ุชุญุฏูุซ ุฃู ุชุตุญูุญ ุจูุงูุงุชู
๐๏ธ ุทูุจ ุญุฐู ุญุณุงุจู ูุจูุงูุงุชู
โ ุฅููุงู ูุนุงูุฌุฉ ุจูุงูุงุชู ูุฃุบุฑุงุถ ูุนููุฉ
๐ค ููู ุจูุงูุงุชู ูุฎุฏูุฉ ุฃุฎุฑู
๐ซ ุงูุงุนุชุฑุงุถ ุนูู ูุนุงูุฌุฉ ุจูุงูุงุชู

ููุงุณุชูุงุฏุฉ ูู ูุฐู ุงูุญูููุ ุชูุงุตู ูุนูุง ุนุจุฑ ุฎุฏูุฉ ุงูุนููุงุก.''',
                        theme: theme,
                        delay: 1200,
                      ),

                      // ุชุญุฏูุซ ุงูุณูุงุณุฉ
                      _buildPrivacyCard(
                        icon: FontAwesomeIcons.sync,
                        title: 'ุชุญุฏูุซ ุงูุณูุงุณุฉ',
                        content: '''ูุฏ ูููู ุจุชุญุฏูุซ ูุฐู ุงูุณูุงุณุฉ ูู ููุช ูุขุฎุฑ ูุชุนูุณ ุงูุชุบููุฑุงุช ูู ุฎุฏูุงุชูุง ุฃู ุงููุชุทูุจุงุช ุงููุงููููุฉ. ุณูููู ุจุฅุดุนุงุฑู ุจุฃู ุชุบููุฑุงุช ูููุฉ ุนุจุฑ ุงูุชุทุจูู ุฃู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู.

ุชุงุฑูุฎ ุขุฎุฑ ุชุญุฏูุซ: ุฏูุณูุจุฑ 2024''',
                        theme: theme,
                        delay: 1400,
                      ),

                      // ุฒุฑ ุงูุชูุงุตู
                      SizedBox(height: 20),
                      Container(
                        width: double.infinity,
                        child: ElevatedButton.icon(
                          onPressed: () {
                            Navigator.push(
                              context,
                              MaterialPageRoute(builder: (context) => ContactUsPage()),
                            );
                          },
                          icon: FaIcon(FontAwesomeIcons.headset, size: 18),
                          label: Text(
                            'ูุฏูู ุฃุณุฆูุฉุ ุชูุงุตู ูุนูุง',
                            style: AppTextStyles.medium(context).copyWith(
                              color: Colors.white,
                              fontWeight: FontWeight.bold,
                            ),
                          ),
                          style: ElevatedButton.styleFrom(
                            backgroundColor: AppColors.primary,
                            foregroundColor: Colors.white,
                            padding: EdgeInsets.symmetric(vertical: 15),
                            shape: RoundedRectangleBorder(
                              borderRadius: BorderRadius.circular(15),
                            ),
                            elevation: 4,
                          ),
                        ),
                      ),
                      SizedBox(height: 40),
                    ],
                  ),
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildPrivacyCard({
    required IconData icon,
    required String title,
    required String content,
    required ThemeData theme,
    required int delay,
  }) {
    final customColors = AppThemes.customColors(context);
    
    return TweenAnimationBuilder(
      duration: Duration(milliseconds: 800),
      tween: Tween<double>(begin: 0, end: 1),
      builder: (context, double value, child) {
        return Transform.translate(
          offset: Offset(0, 50 * (1 - value)),
          child: Opacity(
            opacity: value,
            child: Container(
              margin: EdgeInsets.only(bottom: 20),
              child: Card(
                elevation: 4,
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(15),
                  side: BorderSide(color: customColors.borderColor),
                ),
                child: Column(
                  children: [
                    // Header
                    Container(
                      padding: EdgeInsets.all(16),
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          colors: [
                            AppColors.primary,
                            AppColors.secondary,
                          ],
                        ),
                        borderRadius: BorderRadius.only(
                          topLeft: Radius.circular(15),
                          topRight: Radius.circular(15),
                        ),
                      ),
                      child: Row(
                        children: [
                          Container(
                            padding: EdgeInsets.all(10),
                            decoration: BoxDecoration(
                              color: Colors.white.withOpacity(0.2),
                              shape: BoxShape.circle,
                            ),
                            child: FaIcon(
                              icon,
                              color: Colors.white,
                              size: 24,
                            ),
                          ),
                          SizedBox(width: 12),
                          Expanded(
                            child: Text(
                              title,
                              style: AppTextStyles.medium(context).copyWith(
                                color: Colors.white,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                    // Content
                    Padding(
                      padding: EdgeInsets.all(16),
                      child: Text(
                        content,
                        style: AppTextStyles.small(context).copyWith(
                          // color: theme.textTheme.bodyLarge?.color,
                          height: 1.6,
                        ),
                        textAlign: TextAlign.justify,
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ),
        );
      },
    );
  }
}

// ุฑุณุงู ูุฎุตุต ูุชุฃุซูุฑ ุงูุงุญุชูุงู
class CelebrationPainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    final paint = Paint()
      ..color = Colors.white.withOpacity(0.1)
      ..style = PaintingStyle.fill;

    // ุฑุณู ููุงุท ุนุดูุงุฆูุฉ ุชุดุจู ุงูุจุงูููุงุช ูุงูุงุญุชูุงู
    for (int i = 0; i < 20; i++) {
      final x = (i * 37) % size.width;
      final y = (i * 43) % size.height;
      canvas.drawCircle(Offset(x, y), 2, paint);
    }

    // ุฑุณู ุฃุดูุงู ููุฏุณูุฉ ููุงุญุชูุงู
    final trianglePaint = Paint()
      ..color = Colors.white.withOpacity(0.05)
      ..style = PaintingStyle.fill;

    for (int i = 0; i < 10; i++) {
      final x = (i * 71) % size.width;
      final y = (i * 53) % size.height;
      
      final path = Path();
      path.moveTo(x, y);
      path.lineTo(x + 10, y + 15);
      path.lineTo(x - 10, y + 15);
      path.close();
      
      canvas.drawPath(path, trianglePaint);
    }
  }

  @override
  bool shouldRepaint(CustomPainter oldDelegate) => false;
}